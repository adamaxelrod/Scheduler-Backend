from typing import Any, Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Optional, Union

from typing import Dict, Union

from typing import Dict, Union

from typing import Dict, Union

from typing import Dict, Union

from typing import Dict, Union

from typing import Dict, Union

from typing import Dict, Union

from typing import Dict, Union

from typing import Union


class Crew:
    def __init__(self, name, region, rules: Union[bytearray, bytes, str]) -> None: ...
    def initializeSchedule(self) -> Dict[str, None]: ...
    def initializeTeamList(self) -> Dict[str, int]: ...
    def isPrimetimeAllowed(self, primetime) -> bool: ...
    def isExtraPrimetimeAllowed(self) -> bool: ...
    def hadRecentPrimetime(self, week, threshold) -> bool: ...
    def addGameToSchedule(self, game) -> None: ...
    def addOffWeekToSchedule(self, week) -> None: ...
    def isAssigned(self, week) -> bool: ...
    def isCrewOff(self, week) -> Optional[bool]: ...
    def isDueForOff(self, week) -> bool: ...
    def hadTeamRecently(self, week, team, threshold) -> bool: ...
    def hadTeamsRecently(self, week, home, away, threshold) -> bool: ...
    def hadAtLeastOneTeam(self, home, away) -> bool: ...
    def hadOnlyOneTeam(self, home, away) -> bool: ...
    def hadOffWeekRecently(self, week) -> bool: ...
    def isPreferedRegion(self, team: str) -> bool: ...
    def maxedOutEitherTeam(self, home, away) -> bool: ...
    def getRanking(self, week, home, away, primetime=None): ...
    def getPrimetimeRanking(self, primetime, week, home, away) -> int: ...
    def getNonPrimetimeRanking(self, week, home, away) -> int: ...

class CrewEncoder:
    def default(self, o) -> Dict[str, Any]: ...
